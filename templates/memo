<!DOCTYPE html>
<html lang="ja">
<head>
    <meta charset="UTF-8">
    <link rel="icon" sizes="180x180" href="templates/S__18800649.jpg" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>uhs</title>
    
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">

    <style>
        h1, h3, h4 {
            color: #333;
        }

        .url-field {
            margin-bottom: 15px; /* フィールドの間隔 */
        }

        .container {
            max-width: 600px;
            padding: 30px;
        }

        body {
            background-color: #f8f9fa;
            margin: 0;
            font-family: arial;
            width: 100vw;
            height: 100vh;
            animation: bugfix infinite 1s;
            -webkit-animation: bugfix infinite 1s;
        }

        @keyframes bugfix {
            from {
                padding: 0;
            }
            to {
                padding: 0;
            }
        }

        @-webkit-keyframes bugfix {
            from {
                padding: 0;
            }
            to {
                padding: 0;
            }
        }

        #overlay-button {
            position: absolute;
            right: 2em;
            top: 3em;
            padding: 26px 11px;
            z-index: 5;
            cursor: pointer;
            user-select: none;
        }

        #overlay-button span {
            height: 4px;
            width: 35px;
            border-radius: 2px;
            background-color: rgb(0, 0, 0);
            position: relative;
            display: block;
            transition: all .2s ease-in-out;
        }

        #overlay-button span:before {
            top: -10px;
            visibility: visible;
        }

        #overlay-button span:after {
            top: 10px;
        }

        #overlay-button span:before, #overlay-button span:after {
            height: 4px;
            width: 35px;
            border-radius: 2px;
            background-color: rgb(0, 0, 0);
            position: absolute;
            content: "";
            transition: all .2s ease-in-out;
        }

        #overlay-button:hover span, #overlay-button:hover span:before, #overlay-button:hover span:after {
            background: #000000;
        }

        input[type=checkbox] {
            display: none;
        }

        input[type=checkbox]:checked ~ #overlay {
            visibility: visible;
        }

        input[type=checkbox]:checked ~ #overlay-button:hover span, input[type=checkbox]:checked ~ #overlay-button span {
            background: transparent;
        }

        input[type=checkbox]:checked ~ #overlay-button span:before {
            transform: rotate(45deg) translate(7px, 7px);
        }

        input[type=checkbox]:checked ~ #overlay-button span:after {
            transform: rotate(-45deg) translate(7px, -7px);
        }

        #overlay {
            height: 100vh;
            width: 100vw;
            background: #ec6451;
            z-index: 2;
            visibility: hidden;
            position: fixed;
        }

        #overlay.active {
        }

        #overlay ul {
            display: flex;
            justify-content: center;
            align-items: center;
            flex-direction: column;
            text-align: center;
            height: 100vh;
            padding-left: 0;
            list-style-type: none;
        }

        #overlay ul li {
            padding: 1em;
        }

        #overlay ul li a {
            color: #fff;
            text-decoration: none;
            font-size: 1.5em;
        }

        #overlay ul li a:hover {
            color: #000!important;
        }
    </style>
</head>
<body>
    <input type="checkbox" id="overlay-input" />
    <label for="overlay-input" id="overlay-button"><span></span></label>
    <div id="overlay">
        <ul>
            <li><a href="#">TikTok Downloader</a></li>
            <li><a href="#">YouTube Downloader</a></li>
            <li><a href="#">Author</a></li>
        </ul>
    </div>
    <div class="container">
        <h1 class="text-center">ikTok Downloader</h1>
        <h4 class="text-center"><a href="https://www.instagram.com/hoshinogenkyosei" target="_blank">@hoshinogenkyosei</a></h4>
        <form method="post">
            <div id="url-container">
                <div class="url-field">
                    <label for="url1" class="form-label">URL 1:</label>
                    <input type="text" id="url1" name="url" required class="form-control">
                </div>
            </div>

            <button type="button" class="btn btn-primary" onclick="addUrlField()">追加</button>
            <button type="submit" class="btn btn-success">保存</button>
        </form>

        {% if download_urls %}
        <h3 class="mt-4">ダウンロードリンク:</h3>
        {% for download_url in download_urls %}
        <a href="{{ url_for('download_file', filename=download_url) }}" class="d-block mt-2">{{ download_url }}</a>
        {% endfor %}
        {% endif %}
    </div>

    <!-- Bootstrap JS and dependencies -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>

    <script>
        let urlCount = 1; // URLフィールドの数をカウント

        function addUrlField() {
            const container = document.getElementById('url-container');
            urlCount++;

            // 新しいフィールドを作成するためのdiv
            const fieldContainer = document.createElement('div');
            fieldContainer.classList.add('url-field');

            // 新しいラベルを作成
            const label = document.createElement('label');
            label.htmlFor = 'url' + urlCount;
            label.textContent = 'URL ' + urlCount + ':';
            label.classList.add('form-label');

            // 新しいテキストボックスを作成
            const input = document.createElement('input');
            input.type = 'text';
            input.id = 'url' + urlCount;
            input.name = 'url';
            input.placeholder = 'URLを入力';
            input.required = true;
            input.classList.add('form-control');

            // フィールドコンテナにラベルと入力を追加
            fieldContainer.appendChild(label);
            fieldContainer.appendChild(input);

            // メインのコンテナに追加
            container.appendChild(fieldContainer);
        }
    </script>
</body>
</html>
